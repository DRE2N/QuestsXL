displayName: 'Eine kuhle Quest'
description: 'Eine genauere Beschreibung. Benutze \n für neue Zeilen.'

# Eine Liste der Conditions (Bedingungen), um eine Quest zu starten.
conditions:
  noLevel:
    # Die Inverted-Condition ist besonders. Sie ist erfüllt, wenn andere Conditions _nicht_ erfüllt sind
    type: INVERTED
    conditions:
      level:
        # Hier: Der Spieler kann diese Quest nur machen, wenn er _nicht_ über Level 10 ist.
        type: LEVEL
        level: 10

# Eine Liste an Actions, die ausgeführt werden, wenn die Quest begonnen wird.
onStart:
  group:
    # z.B. fügen wir den Spieler zur Gruppe "Templer" hinzu
    type: PERMISSION
    operation: ADD_GROUP
    permission: Templer

# Eine Liste an Actions, die ausgeführt werden, wenn die Quest beendet wird.
# So lassen sich zum Beispiel Belohnungen vergeben, aber auch z.B. direkt eine andere Quest starten.
onFinish:
  items:
    type: GIVE_ITEM
    item: DIAMOND
  teleport: Saragandes;100;20;200
# Die Stages (Abschnitte) der Quest.
stages:
  # Die ID dieser Stage. Hier sind nur Zahlen erlaubt
  0:
    # Optional. Diese Nachricht wird angezeigt, wenn der Spieler die Stage beginnt.
    startMessage: 'Hello'
    # Optional. Diese Nachricht wird angezeigt, wenn der Spieler die Stage erfolgreich abschließt.
    completeMessage: 'Du hast die erste Stage geschafft!'
    # Eine Liste aller Objectives (Ziele) dieser Stage
    objectives:
      # Ein beliebiger Name. Wird nicht angezeigt.
      TestObjective:
        # Der Typ des Objectives. Wird immer benötigt.
        type: LOCATION
        # Die Anzeige, die der Spieler ingame erhält.
        display: 'Gehe zu [100, 10, 40].'
        # Verschiedene Einstellungen, abhängig vom Objective.
        world: Saragandes
        x: 100
        y: 10
        z: 40
        range: 5
        # Optional. Objectives können Actions ausführen, wenn sie abgeschlossen werden.
        onComplete:
          # Auch die Namen der Actions werden nirgends angezeigt.
          teleportThePlayer:
            type: TELEPORT
            world: Saragandes
            x: 100
            y: 10
            z: 70
            # Jede Action kann beliebig viele weitere Actions auführen. Diese können hier gelistet werden.
            runAfter:
              delay:
                type: DELAY
                delay: 10
                actions:
                  msg:
                    type: MESSAGE
                    message: 'Geh endlich!'
                    # Auch Actions können Conditions haben. So fordern wir z.B. den Spieler auf endlich zu gehen, wenn er nach 10s immer noch da steht.
                    conditions:
                      stillHere:
                        type: LOCATION
                        x: 100
                        y: 10
                        z: 70
                        range: 5
                    # runAfter: - Das ganze lässt sich beliebig lange fortsetzen. Irgendwann ist es aber sicher sinnvoller, einfach eine neue Stage zu beginnen.
          progress:
            # Diese Action verändert die aktuelle Stage eines Spielers. So kann z.B. ein Spieler, der ein bestimmtes Objective abschließt, auf Stage 10 landen
            # ein Spieler der ein anderes Objective abschließt, jedoch auf Stage 100. So lassen sich Questverzweigungen erstellen.
            # Standardmäßig landet ein Spieler immer in der nächsten Stage, wenn alle Objectives abgeschlossen sind.
            type: STAGE
            id: 1


  1:
    startMessage: 'Zweite Stage'
    completeMessage: 'Fertig.'
    #onStart: - Eine Liste an Actions, die ausgeführt werden, wenn diese Stage begonnen wird.
    #onFinish: - Eine Liste an Actions, die ausgeführt werden, wenn diese Stage abgeschlossen wird.
    #conditions: - Eine Liste an Bedingungen für den Beginn dieser Stage. Solange diese nicht erfüllt sind, bleibt der Spieler in der vorherigen Stage "stecken". Sollte niemals für die erste Stage genutzt werden.
    objectives:
      useItem:
        type: USE_ITEM
        display: 'Benutze cooles Item, während du den Goldblock ansiehst.'
        # Der Name des coolen Items.
        item: CoolesCustomItem
        # Objectives können auch Conditions haben.
        conditions:
          lookingAt:
            type: LOOKING_AT
            block: GOLD_BLOCK
        onComplete:
          sendMessage:
            type: MESSAGE
            message: 'Toller Goldblock, nicht wahr?'
        # <-- Sonstige Optionen -->
        #onFail: - Einige Objectives können auch fehlschlagen - zum Beispiel das EscortNPCObjective, wenn der NPC stirbt. Auch dann lassen sich Actions ausführen.
        #optional: true/false - Optionale Objectives müssen nicht erfüllt werden, um die Stage abzuschließen
        #persistent: true/false - Objectives, die Persistent sind, können nicht erfüllt werden. Das kann z.B. genutzt werden, um den Spieler immer wieder zu teleportieren, wenn er/sie an eine bestimmte Stelle geht.
